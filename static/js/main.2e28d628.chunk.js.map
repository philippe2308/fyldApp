{"version":3,"sources":["assets/icons/icon_Countries.svg","assets/icons/icon_Age_Average.svg","assets/icons/icon_Feminine.svg","components/LoadIcon/index.js","view/Splash/index.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["subjects","title","subTitle","icon","iconCountries","color","iconFeminine","iconAgeAveragr","LoadIcon","useState","currentIndex1","setCurrentIndex1","currentIndex2","setCurrentIndex2","currentCircle","setCurrentCircle","showTitles","setShowTitles","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","useEffect","timer2","setInterval","console","log","clearInterval","timer1","setTimeout","clearTimeout","className","src","class","alt","style","options","width","height","id","in","stdDeviation","result","mode","values","in2","Splash","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.2e28d628.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon_Countries.a1bcb26d.svg\";","export default __webpack_public_path__ + \"static/media/icon_Age_Average.47225dbb.svg\";","export default __webpack_public_path__ + \"static/media/icon_Feminine.672fcc93.svg\";","import React, { useState, useEffect } from 'react';\r\nimport './style.scss';\r\nimport Lottie from 'react-lottie';\r\nimport animationData from './../../assets/lotties/loader.json';\r\nimport {\r\n    iconCountries,\r\n    iconAgeAveragr,\r\n    iconFeminine} from './../../assets';\r\n\r\n\r\n\r\nconst subjects = [\r\n    {\r\n        title:\"We are multicultural\",\r\n        subTitle:\"7 different countries\",\r\n        icon: iconCountries,\r\n        color:'#0000FF'\r\n    },\r\n    {\r\n        title:\"We are girl power\",\r\n        subTitle:\"45% of our team are women\",\r\n        icon:iconFeminine,\r\n        color:'#FF1493'\r\n    },\r\n    {\r\n        title:\"We are openmind\",\r\n        subTitle:\"30 is the average age of our team\",\r\n        icon:iconAgeAveragr,\r\n        color:'#00FF00'\r\n    }\r\n]\r\n\r\n\r\nfunction LoadIcon() {\r\n    const [currentIndex1, setCurrentIndex1] = useState(0);\r\n    const [currentIndex2, setCurrentIndex2] = useState(0);\r\n    const [currentCircle, setCurrentCircle] = useState(0);\r\n    const [showTitles, setShowTitles] = useState(false);\r\n    \r\n    const defaultOptions = {\r\n        loop: true,\r\n        autoplay: true, \r\n        animationData: animationData,\r\n        rendererSettings: {\r\n          preserveAspectRatio: 'xMidYMid slice'\r\n        }\r\n      };\r\n    \r\n\r\n    const changeSubjects = () => {\r\n        console.log('ready2');\r\n        console.log(currentCircle);\r\n        if (currentCircle === 1) {\r\n            setCurrentIndex2((currentIndex2 + 1) % 3);\r\n        } else {\r\n            setCurrentIndex1((currentIndex2));\r\n        }\r\n        setCurrentCircle((currentCircle + 1) % 2);\r\n    }\r\n\r\n  useEffect(\r\n      () => {\r\n          \r\n\r\n          let timer2 = setInterval(() => {\r\n              console.log(showTitles);\r\n              changeSubjects();\r\n        }, 3*1000);\r\n\r\n        return () => {\r\n            clearInterval(timer2);\r\n        };\r\n    },\r\n    [currentCircle,currentIndex1,currentIndex2]\r\n    );\r\n\r\n    useEffect(() => {\r\n        let timer1 = setTimeout(() => {\r\n            setShowTitles(true);\r\n      }, 6 * 1000);\r\n        return () =>   clearTimeout(timer1);\r\n      }, [showTitles]);\r\n    return (\r\n        <div className=\"background\">\r\n            \r\n\r\n\r\n            <div className=\"firstDiagonal\">\r\n                <div className=\"dotContainer firstContainer\">\r\n                    <div className=\"dot\">\r\n                        <img src={subjects[currentIndex1].icon}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"loadIcon\">\r\n                    <div className=\"logoFyld\">\r\n                        <img src=\"https://wp.fyld.pt/wp-content/uploads/2020/09/FYLD_Logo_Animation_1920x1080px_BLACK_Animated_Gif_optimize.gif\" class=\"logo-players\" alt=\"Consultores TI - Equipa tÃ©cnica\">\r\n                        </img>\r\n                    </div>\r\n                </div>\r\n                <div className=\"title\" style={{ color: showTitles ? '#fff' : 'transparent' }}>\r\n                    {subjects[currentIndex2].subTitle}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"secondDiagonal\">\r\n                <div className=\"dotContainer\">\r\n                    <div className=\"dot\">\r\n                        <img src={subjects[currentIndex2].icon}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"title\" style={{color:showTitles ?'#fff': 'transparent' }}>\r\n                    {subjects[currentIndex2].title}\r\n                </div>\r\n                <div className=\"lottieIcon\">\r\n                    <Lottie\r\n                        options={defaultOptions}\r\n                        width={400}\r\n                        height={400}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <svg>\r\n\t<defs>\r\n\t\t<filter id=\"goo\">\r\n\t\t\t<feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"10\" result=\"blur\" />\r\n\t\t\t<feColorMatrix\r\n\t\t\t\tin=\"blur\"\r\n\t\t\t\tmode=\"matrix\"\r\n\t\t\t\tvalues=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7\"\r\n\t\t\t\tresult=\"goo\"\r\n\t\t\t/>\r\n\t\t\t<feBlend in=\"SourceGraphic\" in2=\"goo\" />\r\n\t\t</filter>\r\n\t</defs>\r\n</svg>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default LoadIcon;","import React from 'react';\r\nimport { LoadIcon } from '../../components';\r\n\r\nimport './style.css';\r\n\r\nfunction Splash() {\r\n    return (\r\n        <div className=\"background\">\r\n\r\n            <LoadIcon/>\r\n            <div className=\"textAreYouReady\">\r\n                Are you ready to\r\n            </div>\r\n\r\n            \r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Splash;","import React from 'react';\nimport { Splash } from \"./view\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <Splash/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}